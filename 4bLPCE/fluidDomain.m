function [Sol, NSnormIndicator, Force, Traction, Moment] = fluidDomain(solver, fluid, pmc, Sol, cnnF,... 
                                              crdNew, elemType, ndof, nen, nElemF, BCFluid,...
                                              fluidBCNodesU, fluidBCNodesV, ...
                                              fluidBCNodesP,...
                                              oisdNodes, r_0)

% Solve Navier-Stokes
fluidBCValuesU = [fluid.DirichletUval; Sol.aleVel(oisdNodes,1)];
fluidBCValuesV = [fluid.DirichletVval; Sol.aleVel(oisdNodes,2)];
fluidBCValuesP = [];
        
[Sol, NSnormIndicator] = navierStokes(solver, fluid, pmc, Sol, cnnF,... 
                                              crdNew, elemType, ndof, nen, nElemF, BCFluid,...
                                              fluidBCNodesU, fluidBCNodesV, fluidBCValuesU, ...
                                              fluidBCValuesV, fluidBCNodesP, fluidBCValuesP,...
                                              oisdNodes);
        
% Evaluate integrated values at the surface                                  
[Sol, Force] = navierStokesRes(solver, fluid, pmc, Sol, cnnF,... 
                                              crdNew, elemType, ndof, nen, nElemF, BCFluid,...
                                              fluidBCNodesU, fluidBCNodesV, fluidBCValuesU, ...
                                              fluidBCValuesV, fluidBCNodesP, fluidBCValuesP,...
                                              oisdNodes);
%crdNew(:,1) = crd(:,1) + Sol.aleDisp(:,1);
%crdNew(:,2) = crd(:,2) + Sol.aleDisp(:,2);
%crdNew(:,3) = crd(:,3);
crdOisd = crdNew(oisdNodes,:) ;
[Traction, Moment] = IntegratedOutput(crdOisd, Force, r_0); 

end